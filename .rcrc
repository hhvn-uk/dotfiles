# Fuck GNU
if (grep --version >[2=1] | grep GNU >/dev/null)
	__prompt_gnu_binary = 'a'

# Backend prompt function
fn __prompt {
	__prompt_exitcode = $status
	__prompt_gitoutput = 0
	if (~ $__prompt_exitcode 0) {
		tput setaf 15
	} else {
		tput setaf 10
	}
	printf '%s ' $__prompt_exitcode

	# username
	tput setaf 5
	printf '%s ' `{whoami}

	# branch
	tput setaf 3
	__prompt_branch = `{git branch >[2]/dev/null | 
			grep '^*' | 
			awk '{print $2 "|"}'}
	if (!~ $__prompt_branch ()) {
		printf '%s' $__prompt_branch
		__prompt_gitoutput = 1
	}

	# unstaged changes
	__prompt_diff = ``(''){git diff >[2=1]}
	if (echo $__prompt_diff | grep '.' >/dev/null && !~ $__prompt_diff warning:*) {
		if (echo $__prompt_diff | grep '.' >/dev/null) {
			tput setaf 8
		} else {
			tput setaf 15
		}

		printf '%s+' `{echo $__prompt_diff | 
				grep '-E'^$__prompt_gnu_binary '^(\+\+\+|---)' |
				sed -E 's~^[^a]*a/|^[^b]*b/~~' |
				grep -v /dev/null | 
				uniq | 
				wc -l | 
				tr -d '\n'}
		__prompt_gitoutput = 1
	} else if (!~ $__prompt_diff warning:*) {
		tput setaf 15
		printf '='
		__prompt_gitoutput = 1
	}

	# unpushed commits
	__prompt_log = ``(''){git log '--pretty=format:commit %h%d' >[2]/dev/null}
	if (echo $__prompt_log | head -n1 | grep -v '.*\/.*' >/dev/null) {
		tput setaf 14
		echo $__prompt_log | awk '
			BEGIN {c = 0; exitcode = 1}
			/^commit/ {
				if ($0 ~ /\//) {
					printf("%d^", c)
					exitcode = 0
					exit(0)
				} else c += 1
			}
			END { exit(exitcode) }' && __prompt_gitoutput = 1
	}

	if (~ $__prompt_gitoutput 1) {
		printf ' '
	}

	# dir
	tput setaf 7
	printf '%s' `{pwd | sed 's~' ^ $home ^ '~\~~'}

	# end
	printf '$ '
	tput sgr0
}

# Frontend prompt function
fn prompt {
	__prompt_content = ``(''){__prompt}
	prompt = ($__prompt_content '')
}

# Aliases
fn g { git $* }
fn vsplit { vim -O }
if (~ `{uname} 'Linux') {
	fn ls {
		if (flag i) {
			builtin ls -FC --color $* 
		} else {
			# rc exports all functions, 
			# so we need to act normal
			# when not interactive.
			builtin ls $*
		}
	}
}
fn v { nvim $* }
fn xi { doas xbps-install $*}
fn xr { doas xbps-remove $*}
fn xq { doas xbps-query $*}
fn ytdl { youtube-dl --add-metadata -ic $* }
fn ytdla { youtube-dl --add-metadata -xic $* }
fn tmux { builtin tmux -f $home/.config/tmux/config $* }
fn sloccount {
	mkdir -p $home/.local/sloccount
	builtin sloccount --datadir $home/.local/sloccount $*
}
fn camerasync {
	rsync -azP /mnt/DCIM/* ~/general/images/byme"
}
fn wtf {
	if (flag i) {
		builtin wtf -o
	} else {
		builtin wtf
	}
}

# Settings
if (! ~ $XDG_CONFIG_HOME ()) {
	history = $home/.local/history
} else {
	history = $XDG_CONFIG_HOME/.local/history
}
