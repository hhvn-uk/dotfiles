# Fuck GNU
if (~ `$nl{grep --version >[2=1]} *GNU*)
	__prompt_gnu_binary = 'a'

fn __prompt_tput {
	# Use \001 and \002 to tell readline
	# wether a character is visible or not
	printf '\001%s\002' `''{tput $*}
}

fn __prompt_exit_colour {
	if (~ $1 0) {
		__prompt_tput setaf 15
	} else if (~ $1 sig*) {
		__prompt_tput setaf 8
	} else {
		__prompt_tput setaf 10
	}
}

# Backend prompt function
fn __prompt {
	__prompt_exitcodes = $status
	__prompt_gitoutput = 0

	# missing newline
	# https://www.vidarholen.net/contents/blog/?p=878
	__prompt_tput setaf 14
	printf '%%'
	tr '\0' ' ' < /dev/zero | head -c `{tput cols} | sed 's/.//'
	printf '\r'

	# exit codes
	# rc produces a list if there is a pipeline
	if (~ $__prompt_exitcodes(2) ()) {
		# only one
		__prompt_exit_colour $__prompt_exitcodes(1)
		printf '%s ' $__prompt_exitcodes(1) | sed 's/^sig//'
	} else {
		__prompt_tput setaf 3
		printf '['
		__prompt_print_bar =  0
		for (__prompt_exitcode in $__prompt_exitcodes) {
			if (~ $__prompt_print_bar 1) {
				__prompt_tput setaf 3
				printf '|'
			} else {
				__prompt_print_bar = 1
			}
			__prompt_exit_colour $__prompt_exitcode
			printf '%s' $__prompt_exitcode | sed 's/^sig//'
		}
		__prompt_tput setaf 3
		printf '] '
	}

	# username
	__prompt_tput setaf 5
	printf '%s ' `{whoami}

	# branch
	__prompt_tput setaf 3
	__prompt_branch = `{git branch >[2]/dev/null | 
			grep '^*' | 
			awk '{print $2 "|"}'}
	if (!~ $__prompt_branch ()) {
		printf '%s' $__prompt_branch
		__prompt_gitoutput = 1
	}

	# unstaged changes
	__prompt_diff = ``(''){git diff >[2]/dev/null}
	__prompt_diffstatus = $bqstatus
	if (~ $__prompt_diff ?*) {
		__prompt_tput setaf 8
		printf '%s+' `{echo $__prompt_diff | 
				grep '-E'^$__prompt_gnu_binary '^(\+\+\+|---)' |
				sed -E 's~^[^a]*a/|^[^b]*b/~~' |
				grep -v /dev/null | 
				uniq | 
				wc -l | 
				tr -d '\n'}
		__prompt_gitoutput = 1
	} else if (~ $bqstatus 0) {
		__prompt_tput setaf 15
		printf '='
		__prompt_gitoutput = 1
	}

	# unpushed commits
	__prompt_log = ``(''){git log '--pretty=format:commit %h%d' >[2]/dev/null}
	if (!~ `$nl{echo $__prompt_log | head -n1} */*) {
		__prompt_tput setaf 14
		echo $__prompt_log | awk '
			BEGIN {c = 0; exitcode = 1}
			/^commit/ {
				if ($0 ~ /\//) {
					printf("%d^", c)
					exitcode = 0
					exit(0)
				} else c += 1
			}
			END { exit(exitcode) }' && __prompt_gitoutput = 1
	}

	if (~ $__prompt_gitoutput 1) {
		printf ' '
	}

	# dir
	__prompt_tput setaf 7
	printf '%s' `{pwd | sed 's~' ^ $home ^ '~\~~'}

	# end
	printf '$\001 \002'
	__prompt_tput sgr0
}

# Frontend prompt function
fn prompt {
	printf '\033]0;rc: %s\007' `{pwd}
	__prompt_content = ``(''){__prompt}
	prompt = ($__prompt_content '')
}

# Aliases
fn g { git $* }
fn vsplit { vim -O }
if (~ `{uname} 'Linux') {
	fn ls {
		if (flag i) {
			builtin ls -FC --color $* 
		} else {
			# rc exports all functions, 
			# so we need to act normal
			# when not interactive.
			builtin ls $*
		}
	}
}
fn v { nvim $* }
fn xi { doas xbps-install $*}
fn xr { doas xbps-remove $*}
fn xq { doas xbps-query $*}
fn ytdl { youtube-dl --add-metadata -ic $* }
fn ytdla { youtube-dl --add-metadata -xic $* }
fn tmux { builtin tmux -f $home/.config/tmux/config $* }
fn sloccount {
	mkdir -p $home/.local/sloccount
	builtin sloccount --datadir $home/.local/sloccount $*
}
fn camerasync {
	rsync -azP /mnt/DCIM/* ~/general/images/byme"
}
fn wtf {
	if (flag i) {
		builtin wtf -o
	} else {
		builtin wtf
	}
}
fn w3m {
	# Symlink $home/.config/w3m -> $home/.config/.w3m
	home = $home/.config { builtin w3m $* }
}

# Settings
history = $XDG_CACHE_HOME/history

# .profile
INPUTRC	= $home/.config/readline/inputrc
ENV	= $home/.config/ksh/kshrc
EDITOR	= nvim
PAGER	= less
TERMINAL= st
PASS	= $home/.local/pass

. $home/.config/user-dirs.dirs
XDG_CONFIG_HOME	= $home/.config
XDG_CACHE_HOME	= $home/.cache
XAUTHORITY	= $home/.local/.xauth
LESSHISTFILE	= -
GNUPGHOME	= $home/.local/gnupg
IPFS_PATH	= $home/.local/ipfs
CURLHOME	= $home/.config/curl/"
