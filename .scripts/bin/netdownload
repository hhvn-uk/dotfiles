#!/bin/sh

uri2file(){
	awk '
	BEGIN {
		FS="/"
	}

	{
		for (i=NF; i != 1; i--)
			printf "%s+", $i
		printf "%s\n", $1
	}'
}

case "$1" in
*"://"*) # URI
	input=$(printf "plumb\ndownload\n" | dmenu -i -p "$1")
	case "$input" in
	d*)
		file="$HOME/general/downloads/$(echo "$1" | uri2file)"
		while [ -f $file ]
		do
			file="$HOME/general/downloads/$(base64 </dev/urandom | tr '/' '+' | head -c10)"
		done
		curl "$(echo "$1" | sed -E 's/]|\[|}|\{/\\&/g')" > "$file"
		herbe "Saved to: $file"
		echo "$file" | xclip
		;;
	p*)
		plumb "$1"
		;;
	*)
		exit 99
		;;
	esac
	;;
*) 	# download queue
	linec=0
	while read -r line
	do
		linec=$(echo "$linec + 1" | bc)

		dir=$(printf '%s\n' "$line" | awk -F"\t" '{print $1}')
		uri=$(printf '%s\n' "$line" | awk -F"\t" '{print $2}')
		# let $3 be comment, therefore no need to handle

		[ -z "$dir" ] || [ -z "$uri" ] &&
			printf "ERROR: Erroneous syntax on line %d\n" "$linec" &&
			continue

		[ -f "$dir" ] &&
			printf "ERROR: File exists inplace of dir '%s'\n" "$dir" &&
			continue

		mkdir -p "$dir"

		file="$dir/$(echo "$uri" | sha256sum | awk '{print $1}')"
		[ -f "$file" ] && continue

		curlout=$(curl -o"$file" "$uri" 2>&1)
		curlexit=$?
		curlout=$(printf '%s\n' "$curlout" | tail -n1 | tr -d '\r' | sed 's/.*curl: ([0-9]*) //') 

		[ $curlexit -ne 0 ] &&
			printf "ERROR: Failed to download '%s': %s\n" "$uri" "$curlout" &&
			continue

		printf "Downloaded '%s' as %s\n" "$uri" "$file"
	done < "${1:-/dev/stdin}"
	;;
esac
