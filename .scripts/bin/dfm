#!/bin/bash
#
# dfm - Hayden's Dmenu File Manager
# Created by Hayden Hamilton
#
# hayden@haydenvh.com
# Copyright (c) 2019-2020 Hayden Hamilton.
#

if [ "$(echo $1 | awk '/help/ {print}')" != "" ]
then
	echo "dfm <fm for standard mode/name of program for file-selection> </path/to/dir - enter at start>
$(tput bold)CONFIG:$(tput sgr0)
DFM_CONF_DIR=[insert /path/to/confdir] <-- Default: $HOME/.config/dfm
DFM_DOT=[0/1 to show dotfiles] <-- Default: 1
DFM_USE_HH_PATCH=[0/1 to use the patched dmenu from haydenvh.com] <-- Default: 0
DFM_DISABLE_ENQUEUE=[0/1 to never enqueue input] <-- Default: 0
DFM_SCREENSHOT_CMD=\"[insert program name]\" <-- Default: \"maim -s\"
DFM_CLIPBOARD_TYPE=\"[PRIMARY/CLIPBOARD/CUSTOM]\" <-- Default: \"PRIMARY\"
DFM_CLIPBOARD_CUSTOM=\"[insert program for clipboard]\" <-- Default: \"xclip\"
$(tput bold)CONFIGURING COMMANDS FOR FILE TYPES:$(tput sgr0) Syntax
	DFM_FILETYPE_[insert filetype in all caps]=\"[insert program name]\"
			^ For example, .mkv is MKV	^ For example mpv
When in standard file management mode, you will now get the option to automatically select a program to launch.
Written by Hayden Hamilton <haydenvh.com>"
	exit 0
fi

forn1="$1"
lsforce="$3"
if [ "$1" = "" ]
then
	export forn1="fm"
fi

getconf(){
	dmenu="dmenu"
	DFM_SCREENSHOT_CMD="maim -s"
	DFM_CONF_DIR="$HOME/.config/dfm"
	DFM_CLIPBOARD_CUSTOM="xclip"
	DFM_CLIPBOARD_TYPE="PRIMARY"
	. $HOME/.dmenurc
	. $HOME/.config/dfm/config
	if [ "$DFM_USE_HH_PATCH" = "1" ]
	then
		dmenu="$dmenu -c -w 1000"
	fi
	if [ "$DFM_CLIPBOARD_TYPE" = "PRIMARY" ]
	then
		clipboard="xclip"
	elif [ "$DFM_CLIPBOARD_TYPE" = "CLIPBOARD" ]
	then
		clipboard="xclip -selection clipboard"
	elif [ "$DFM_CLIPBOARD_TYPE" = "CUSTOM" ]
	then
		clipboard="$DFM_CLIPBOARD_CUSTOM"
	else
		clipboard="xclip"
	fi
	echo $clipboard
	confdir="$DFM_CONF_DIR"
	conffile="$confdir/config"
}

makeconfdir(){
	[ ! -d $confdir ] && mkdir -p $confdir
	[ ! -f $conffile ] && touch $conffile
}

sendconf(){
	varname="$1"
	varcont="$2"
	makeconfdir
	[ -f $conffile ] && sed -i "/${varname}/d" $conffile
	echo "${varname}=\"${varcont}\"" >> $conffile
	. $conffile
}

fmornorm(){
	if [ "$forn1" = "fm" ]
	then
		output2=$(echo "$fmcmd2" | $dmenu -l 30 -i -p "Select command:")
		fmspecial
	else
		dooutput
		if [ "$doarg" = "true" ]
		then
			echo $forn1
			$forn1 $argu
			argu=""
		fi
	fi
}

dooutput(){
	[ "$DFM_DISABLE_ENQUEUE" != "1" ] && enqueue=$(echo "DO ENQUEUE" | tr " " "\n" | $dmenu -i -p "What do you want to do?")
	if [ "$enqueue" = "ENQUEUE" ]
	then
		argu+="$(pwd)/$output "
		doarg="false"
	else
		argu+="$(pwd)/$output "
		doarg="true"
	fi
}

getdot(){
	if [ "$lsforce" != "" ]
	then
		lscommand="$lsforce"
	elif [ "$DFM_DOT" = "1" ]
	then
		lscommand="ls -A"
	elif [ "$DFM_DOT" = "0" ]
	then
		lscommand="ls"
	else
		lscommand="ls -A"
	fi
}

getprog(){
	varout=$(echo "$1" | sed 's/\./ /g' | tr '[:lower:]' '[:upper:]' | awk '// {print $NF}' | sed 's/^/DFM_FILETYPE_/g')
	commandout=${!varout}
}

send0x0(){
	send=$(curl -F "file=@$output" https://0x0.st)
	send2=$(echo "$send" | awk '/http/')
	[ "$send2" = "" ] && echo "Failed" | $dmenu -i -p "Hit enter to continue"
	[ "$send2" != "" ] && echo $send | $dmenu -i -p "Hit enter to continue" | $clipboard
}

sendscrn0x0(){
	output="/tmp/ss"
	$DFM_SCREENSHOT_CMD > /tmp/ss && send0x0
}

fmspecial(){
	if [ "$output2" = "AUTO - Check config for program to use" ]
	then
		getprog "$output"
		[ "$commandout" != "" ] && $commandout $output $argu
		[ "$commandout" = "" ] && echo "No program set..."
	elif [ "$output2" = "RM - Remove file" ]
	then
		rm $output
	elif [ "$output2" = "CMD - Specific command" ]
	then
		output3=$(dmenu_path | $dmenu -i -p "Select program")
		$output3 $output $argu
		argu=""
	elif [ "$output2" = "MV - Move file" ]
	then
		output3=$(echo "" | $dmenu -i -p "Move to:")
		mv $output $output3
	elif [ "$output2" = "EDIT - Open with $EDITOR" ]
	then
		$EDITOR $output $argu
		argu=""
	elif [ "$output2" = "QUE - Enqueue" ]
	then
		argu+="$output "
	elif [ "$output2" = "SND - Send to 0x0.st" ]
	then
		send0x0
	fi
}

cd $2
while true
do
	getconf
	getdot
	output=$(echo "FM * .. $($lscommand)" | tr "\n" " " | tr " " "\n" |  $dmenu -l 30 -i -p "Select file/directory:")
	fmcmd1="CCL - CANCEL
MD - Make dir
MF - Make file
BM - Bookmarks
FND - Find
HIDE - Toggle Dotfiles
SCRN - Host screenshot on 0x0.st"
	fmcmd2="AUTO - Check config for program to use
CCL - CANCEL
MV - Move file
RM - Remove file
CMD - Specific command
EDIT - Open with $EDITOR
QUE - Enqueue
SND - Send to 0x0.st"
	if [ "$output" = "FM" ]
	then
		output=$(echo "$fmcmd1" | $dmenu -l 30 -i -p "Select command:")
		if [ "$output" = "MD - Make dir" ]
		then
			output2=$(echo "" | $dmenu -i -p "Name dir:")
			mkdir $output2
		elif [ "$output" = "MF - Make file" ]
		then
			output2=$(echo "" | $dmenu -i -p "Name file:")
			touch $output2
		elif [ "$output" = "BM - Bookmarks" ]
		then
			touch ~/.config/dfm/bookmarks
			output=$(echo "MK DEL $(cat ~/.config/dfm/bookmarks | awk '// {print $1}')" | tr "\n" " " | tr " " "\n" |  $dmenu -l 30 -i -p "Select file/directory:")
			if [ "$output" = "MK" ]
			then
				output=$(echo "" | $dmenu -i -p "Choose bookmark name(no spaces):")
				output2=$(echo "" | $dmenu -i -p "Choose bookmark path(absolute):")
			 	echo "$output $output2" >> ~/.config/dfm/bookmarks
			elif [ "$output" = "DEL" ]
			then
				output=$(echo "$(cat $confdir/bookmarks | awk '// {print $1}')" | $dmenu -l 30 -i -p "Select bookmark to delete:")
				[ "$(cat $confdir/bookmarks | awk "/$output/ {print"' $1}')" = "$output" ] && sed -i "/$output/d" $confdir/bookmarks
			else
				output=$(cat ~/.config/dfm/bookmarks | awk "/$output/"' {print $2}')
				output2=$(echo "$fmcmd2" | $dmenu -l 30 -i -p "Select command:")
				fmspecial
			fi
		elif [ "$output" = "FND - Find" ]
		then
			output=$(echo "" | $dmenu -i -p "Enter name of file:")
			output2=$(printf "ROOT (Takes a while)\nLOCALLY" | $dmenu -i -p "Find option")
			if [ "$(echo $output2 | awk '/ROOT/')" != "" ]
			then
				echo "May take a while..."
				output3="/"
			else
				output3="."
			fi
			output=$(echo "NONE $(find $output3 | grep -i "$output")" | tr " " "\n" | $dmenu -i -l 30 -p "Select file:")
			if [ "$output" = "NONE" ]
			then
				echo > /dev/null
			else
				fmornorm
			fi
		elif [ "$output" = "HIDE - Toggle Dotfiles" ]
		then
			if [ "$DFM_DOT" = "0" ]
			then
				export DFM_DOT="1"
				sendconf "DFM_DOT" "1"
			elif [ "$DFM_DOT" = "1" ]
			then
				export DFM_DOT="0"
				sendconf "DFM_DOT" "0"
			else
				export DFM_DOT="0"
				sendconf "DFM_DOT" "0"
			fi
		elif [ "$output" = "SCRN - Host screenshot on 0x0.st" ]
		then
			sendscrn0x0
		fi
	elif [ -d "$output" ]
	then
		cd $output
	elif [ "$output" = "exit" ]
	then
		exit 1
	elif [ "$output" = "" ]
	then
		exit 1
	else
		fmornorm
	fi
done
