#!/bin/sh

dir="$1"
odir="${2:-clean}"
filexts="jpg|jpeg|png"

[ -z "$dir" ] || [ ! -d "$dir" ] || [ ! -z "$3" ] && {
	printf "usage: %s <dir> [output-dir]\n" "$(basename $0)"
	exit 2
}

mkdir -p "$odir" || exit $?
touch "$odir/test" && rm "$odir/test" || exit 1

export IFS=$(printf '\n\t')
for f in $(find "$dir" -maxdepth 1 -type f | grep -Ei "\.($filexts)$")
do
	[ "$(uname)" = "OpenBSD" ] && summer=sha256
	[ -z "$summer" ] && summer=sha256sum

	# sum name of file, for speed,
	# as opposed to the file itself
	sum=$(basename "$f" | $summer | awk '{print $1}')
	nhash=$(basename "$f" | sed 's/\..*//')

	# ignore already created
	[ ! -f "$odir/$sum".jpg ] && {
		printf '%s --> %s... ' "$f" "$odir/$sum.jpg"
		exiftool "$f" -all= -o "$odir/$sum".jpg >/dev/null
		printf 'done\n'
	} || printf "%s already exists, ignoring %s...\n" "$odir/$sum.jpg" "$f"
	[ ! -f "$odir/$nhash".jpg ] && {
		printf 'symlinking %s <-> %s...' "$odir/$sum.jpg" "$odir/$nhash.jpg"
		# symlinks are relative to the directory the symlink is in,
		# therefore - do not use $odir/$sum.jpg. ln is kinda dumb in
		# this regard, it just uses the raw argv contents, no checking or
		# resolving of files. Perhaps a smart ln could be a project?
		ln -s "$sum.jpg" "$odir/$nhash.jpg"
		printf 'done\n'
	}
done
