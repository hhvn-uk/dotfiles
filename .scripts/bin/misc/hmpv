#!/bin/bash
#
# hmpv
# Created by Hayden Hamilton
#
# hayden@haydenvh.com
# Copyright (c) 2019-2020 Hayden Hamilton.

action=$1
socket=$2
pause() {
	echo '{ "command": ["set_property", "pause", true] }' | socat - $socket > /dev/null
}
unpause() {
	echo '{ "command": ["set_property", "pause", false] }' | socat - $socket > /dev/null
}
getstate() {
	stateraw=$(echo '{ "command": ["get_property", "pause"] }' | socat - $socket 2>/dev/null | tr '{":0,}' ' ' | awk '// {print $2}')
	if [ "$stateraw" = "true" ]
	then
		state="paused"
	elif [ "$stateraw" = "false" ]
	then
		state="playing"
	else
		echo "No state returned..."
		exit 1
	fi
}
toggle() {
	getstate
	if [ "$state" = "playing" ]
	then
		pause
	elif [ "$state" = "paused" ]
	then
		unpause
	else
		echo "State is undeciferable..."
		exit 1
	fi
}
seek() {
	if [ "$action" = "forward" ]
	then
		echo '{ "command": ["seek", "10"] }' | socat - $socket > /dev/null
	elif [ "$action" = "back" ]
	then
		echo '{ "command": ["seek", "-10"] }' | socat - $socket > /dev/null
	elif [ "$action" = "next" ]
	then
		echo '{ "command": ["playlist-next"] }' | socat - $socket > /dev/null
	elif [ "$action" = "prev" ]
	then
		echo '{ "command": ["playlist-prev"] }' | socat - $socket > /dev/null
	fi
}
convertsecs() {
	((h=${1}/3600))
	((m=(${1}%3600)/60))
	((s=${1}%60))
	printf "%02d:%02d:%02d\n" $h $m $s
}
gettime() {
	convertsecs $(echo '{ "command": ["get_property", "playback-time"] }' | socat - $socket | tr '{":,}' ' ' | awk '// {print $2}' | sed 's/\./ /g' | awk '// {print $1}')
}
quit() {
	echo '{ "command": ["quit"] }' | socat - $socket > /dev/null
	rm /tmp/blocks/mpv
	rm /tmp/dwmblocks/mpv
	rm /tmp/blocks/mpv
	rm /tmp/dwmblocks/mpv
}

if [ "$action" = "toggle" ]
then
	toggle
elif [ "$action" = "quit" ]
then
	quit
elif [ "$action" = "pause" ]
then
	pause
elif [ "$action" = "unpause" ]
then
	unpause
elif [ "$action" = "state" ]
then
	getstate; echo "$state"
elif [ "$action" = "time" ]
then
	gettime
else
	seek
fi
