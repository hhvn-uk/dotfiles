#!/bin/sh
#
# remind
# Created by Hayden Hamilton
#
# haydenvh.com
# Copyright (c) 2020 Hayden Hamilton

cache=${XDG_CACHE_HOME:=$HOME/.cache}

usage(){
	echo "usage: remind $(tput bold)ARGS$(tput sgr0)

ARGS:
$(echo "	-a DATE||STRING	- add STRING as reminder for DATE (follows \`date +%d/%m/%y\` format)
	-a DATE|TIME|STRING	- add STRING as a reminder for DATE (\`date +%d/%m/%y|%H:%M\` format), will create a popup using ${EDITOR:-st} (requires \`at\`, and it's respective daemon running)
	-n	- print number of reminders for today
	-e	- print reminders for today
	-r	- clear today's reminders
	-d DATE 	- get reminders for DATE (follows \`date +%d/%m/%y\` format)" | column -t -s "$(printf "\t")")"
	exit 1
}

add(){
	echo "$1" | grep '^[0-9/%]*|[0-9:]*|' > /dev/null && {
		pdate=${1%%|*} && fdate=$(echo "$pdate" | tr '/' '%')
		ftime=${1#*|} && ftime=${ftime%%|*}
		string=${1#*|*|}

		mkdir $cache/remind/$fdate -p
		num=$(ls $cache/remind/$fdate | wc -l)
		echo "$string" >> $cache/remind/$fdate/$num || {
			echo 'failed to set reminder (writing to file failed)'
			exit 1
		}
		echo "${EDITOR:-st} -e sh -c 'cat \"$cache/remind/$fdate/$num\" /dev/stdin'" | at "$ftime $(echo "$pdate" | tr '/' '.')" && echo "reminder set" || {
			echo 'failed to set reminder (`at` failed)'
			exit 1
		}
	} || {
		fdate=${1%%||*}
		string=${1#*||}

		mkdir $cache/remind/$fdate -p
		num=$(ls $cache/remind/$fdate | wc -l)
		echo "$string" >> $cache/remind/$fdate/$num && echo 'reminder set' || echo 'failed to set reminder'
	}
}

num(){
	ls $cache/remind/$date 2>/dev/null | wc -l
}

_echo(){
	cat $cache/remind/$date/*
}

_clear(){
	rm -rf $cache/remind/$date
}

_date(){
	cat $cache/remind/$(echo "$1" | tr '/' '%')/*
}

date=$(date +%d%%%m%%%y)
mkdir -p $cache/remind
[ -z $1 ] && usage
while [ "$#" != "0" ]
do
	echo "$1" | grep "[a-zA-Z0-0]=" >/dev/null && {
		arg_opt=$(echo "$1" | sed 's/=.*//g')
		arg_opr=$(echo "$1" | sed 's/.*=//g')
	} || {
		arg_opt="$1"
		echo "$arg_opt" | grep -E -- '-a|-d' >/dev/null && {
			shift
			arg_opr="$1"
		}
	}
	case "$arg_opt" in
		-a) add "$arg_opr" ;;
		-n) num ;;
		-e) _echo ;;
		-r) _clear ;;
		-d) _date "$arg_opr" ;;
		*) echo "$arg_opt not recognized"; usage ;;
	esac
	shift
done
