#!/bin/bash
#
# dwmblocks/mpv
# Created by Hayden Hamilton
#
# haydenvh.com
# Copyright (c) 2019 Hayden Hamilton.

file2=$(echo '{command:["get_property", "media-title"]}' | socat - /tmp/mpv-socket | tr "." " " | sed 's/opus//g' | sed 's/mp3//g' | sed 's/mkv//g' | sed 's/flac//g' | sed 's/webm//g' | sed 's/part//g' | tr '"\{:,}[' ' ' | sed 's/data//g' | sed 's/request_id  0//g' | sed 's/error   success//g' | sed 's/  //g' | tail -c +2 | sed 's/$//g' | tr "()'" " " | sed 's/   / /g' |sed 's/  / /g' | sed 's/  / /g' | sed 's/   / /g')
vidtitle2=$(echo '{command:["get_property", "media-title"]}' | socat - /tmp/mpv-socket2 | tr '"{:,}\[' ' ' | sed 's/data//g' | sed 's/request_id  0//g' | sed 's/error   success//g' | sed 's/  / /g' | sed 's/  / /g' | sed 's/  / /g' | sed 's/  / /g' | sed 's/^//g')
radtitle=$(echo '{command:["get_property", "metadata/icy-title"]}' | socat - /tmp/mpv-socket3 | tr '"{:,}\[' ' ' | sed 's/data//g' | sed 's/request_id  0//g' | sed 's/error   success//g' | sed 's/  / /g' | sed 's/  / /g' | sed 's/  / /g' | sed 's/  / /g' | sed 's/^//g')
state=$(echo '{ "command": ["get_property", "pause"] }' | socat - /tmp/mpv-socket | tr '{":0,}' ' ' | awk '// {print $2}')
state2=$(echo '{ "command": ["get_property", "pause"] }' | socat - /tmp/mpv-socket2 | tr '{":0,}' ' ' | awk '// {print $2}')
state3=$(echo '{ "command": ["get_property", "pause"] }' | socat - /tmp/mpv-socket3 | tr '{":0,}' ' ' | awk '// {print $2}')
artist=$(echo '{ "command": ["get_property", "metadata/artist"] }' | socat - /tmp/mpv-socket | tr '{":0,}' ' ' | sed 's/[[:space:]]*data[[:space:]]*//g;s/[[:space:]]*request_id.*$//g')
artist2=$(echo '{ "command": ["get_property", "metadata/artist"] }' | socat - /tmp/mpv-socket2 | tr '{":0,}' ' ' | sed 's/[[:space:]]*data[[:space:]]*//g;s/[[:space:]]*request_id.*$//g')
artist3=$(echo '{ "command": ["get_property", "metadata/icy-artist"] }' | socat - /tmp/mpv-socket3 | tr '{":0,}' ' ' | sed 's/[[:space:]]*data[[:space:]]*//g;s/[[:space:]]*request_id.*$//g')
[ "$artist" != "" ] && artist="$artist - "
[ "$artist2" != "" ] && artist2="$artist2 - "
[ "$artist3" != "" ] && artist3="$artist3 - "
convertsecs() {
	h=$((${1}/3600))
	m=$((${1}%3600))
	m=$(($m/60))
	s=$((${1}%60))
	printf "%02d:%02d:%02d\n" $h $m $s
}
time=$(convertsecs $(echo '{ "command": ["get_property", "playback-time"] }' | socat - /tmp/mpv-socket | tr '{":,}' ' ' | awk '// {print $2}' | sed 's/\./ /g' | awk '// {print $1}'))
time2=$(convertsecs $(echo '{ "command": ["get_property", "playback-time"] }' | socat - /tmp/mpv-socket2 | tr '{":,}' ' ' | awk '// {print $2}' | sed 's/\./ /g' | awk '// {print $1}'))

if [ "$state3" = "false" ]
then
	out="$(echo "PLAY - RADIO - $artist3$radtitle" | cut -zc-60)"
	color="true"
elif [ "$state" = "false" ]
then
	out="$(echo "PLAY - MUSIC - $artist$file2" | cut -zc-60) - $time"
	color="true"
elif [ "$state" = "true" ]
then
	if [ "$state2" = "false" ]
	then
		out="$(echo "PLAY - VIDEO - $artist2$vidtitle2" | cut -zc-60) - $time2"
	elif [ "$state3" = "true" ]
	then
		out="$(echo "STOP - RADIO - $artist3$radtitle" | cut -zc-60)"
	else
		out="$(echo "STOP - MUSIC - $artist$file2" | cut -zc-60) - $time"
	fi
	color="true"
elif [ "$state2" = "false" ]
then
	out="$(echo "PLAY - VIDEO - $artist2$vidtitle2" | cut -zc-60) - $time2"
	color="true"
elif [ "$state2" = "true" ]
then
	out="$(echo "STOP - VIDEO - $artist2$vidtitle2" | cut -zc-60) - $time2"
	color="true"
else
	color="false"
fi
if [ "$color" = "true" ]
then
	echo "[MPV $out]"
elif [ "$color" = "false" ]
then
	exit 0
else
	echo "Nothing set?... Exiting"
	exit 1
fi
