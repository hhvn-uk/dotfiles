#!/bin/sh
# - recognize file names from inside commit message
# example: git ac -m "LICENSE project.c: new email addr"
#  output: git add LICENSE project.c; git commit -m "LICENSE project.c: new email addr"

shorten=y

die(){
	echo "error: no filenames extracted from commit message"
	exit 1
}

for n in $(seq $#)
do
	[ "$(eval "echo \$$n")" = "-m" ] && inline=y && break
done

[ "$inline" = "y" ] && {
	echo "$@" | grep ".*-m *[^:]*:" >/dev/null || die

	# [][][^][]*[][] is one of the ugliest regexes I've ever constructed
	# It is meant to get rid of the [NEW] from "thing.1[NEW]: add manpage"
	files=$(echo "$@" | sed 's/[][][^][]*[][]//g' | sed -E 's/.*-m *([^:]*):.*/\1/')

	git add $files

	while [ $# != 0 ]
	do
		printf '%s\0' "$1"
		shift
	done | xargs -0 git commit
}

[ "$inline" != "y" ] && {
	# in non-inline mode, take list of files to add
	# then format these into the COMMIT_EDITMSG file

	[ "$shorten" = "y" ] && {
		echo "$@:" | sed -E 's~([a-zA-Z])[^ /]*/~\1/~g;s~(^| )--?[a-z]*( |$)~~g' > .git/COMMIT_EDITMSG
	} || echo "$@:" > .git/COMMIT_EDITMSG
	sum=$(sha256sum .git/COMMIT_EDITMSG)
	${EDITOR:-vim} .git/COMMIT_EDITMSG
	sum2=$(sha256sum .git/COMMIT_EDITMSG)

	[ "$sum" != "$sum2" ] && {
		git add "$@" || exit 1
		git commit -F .git/COMMIT_EDITMSG 
	} || {
		echo "error: COMMIT_EDITMSG not changed"
		exit 1
	}
}


