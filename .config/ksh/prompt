#!/bin/ksh

__ksh_prompt(){
	echo "$0" | grep -v ksh >/dev/null && {
		printf "($(basename $0)) "
	}
	errorcode=$1
	# tput setaf 10 >/dev/null
	[ $errorcode -eq 0 ] && tput setaf 15 || tput setaf 10
	printf '%s ' "$errorcode"
	tput setaf 5
	printf "%s " "$(whoami)"
	tput setaf 3
	printf "%s" $(git branch 2>/dev/null | grep '^*' | awk '{print $2 "|"}')
	[ "$_PROMPT_GIT" = "y" ] && {
		git diff 1>/dev/null 2>/dev/null && {
			git diff | grep '.' >/dev/null && tput setaf 8 || tput setaf 15
			printf "%s+" $(git diff 2>/dev/null | grep -E '^(\+\+\+|---)' | sed -E 's~^[^a]*a/|^[^b]*b/~~' \
				| grep -v /dev/null | uniq | wc -l | tr -d '\n' | grep '.' || printf 0)
			git log --pretty=format:"commit %h%d" | head -n 1 | grep -v '.*\/.*' >/dev/null && tput setaf 14 && {
				git log --pretty=format:"commit %h%d" | awk -v "c=0" '
					/^commit/ {
						if ($0 ~ /\//) {
							printf("%d", c)
							exit
						} else c += 1
					}'
				printf '^'
			}
			printf ' '
		}
	}
	tput setaf 7
	printf "%s " $(pwd | sed "s-$HOME-~-")
	printf "$ "
	tput sgr0
}

export _PROMPT_GIT=y
alias hide_git="export _PROMPT_GIT=n"
alias show_git="export _PROMPT_GIT=y"
